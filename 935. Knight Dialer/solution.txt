/**
 * @param {number} n
 * @return {number}
 */
var knightDialer = function(n) {
    const memo = new Map();
    const MOD = 1e9+7;
    const jump = [[4,6], [6,8], [7,9], [4,8], [3,9,0], [],[1,7,0],[2,6],[1,3],[2,4]];

    const cntDistinctWays = (cur, n) =>{
        const key = `${cur}#${n}`;

        if(n == 0) return 1;
        if(memo.has(key)) return memo.get(key);

        let cnt = 0;
        for(let next of jump[cur]){
            cnt = (cnt + cntDistinctWays(next, n-1)) % MOD;
        }
        memo.set(key, cnt);
        return cnt;
    }

    let cnt = 0;
    for(let i=0; i<=9; i++){
        cnt = (cnt + cntDistinctWays(i, n-1)) % MOD;
    }
    return cnt;
};